# This is the main Android apk build workflow for both nightly and beta releases.
# This is also configured to run as a workflow_call.

name: Build-APK

on:
  push:
    branches: [darwis]
    paths-ignore:
      - '*.md'
  workflow_dispatch:
    inputs:
      build-target:
        description: 'Build Target ("nightly"/"beta"/"non-release")'
        type: string
        required: true
        default: "nightly"
      git-ref:
        description: "Build from Git Ref(darwis)"
        required: true
        default: "darwis"
  workflow_call:
    inputs:
      build-target:
        type: string
        required: true
    secrets:
      ANDROID_KEYSTORE:
        required: true
      ANDROID_KEYSTORE_PASSWORD:
        required: true
      TELEGRAM_TO:
        required: true
      TELEGRAM_TOKEN:
        required: true

env:
  CLOJURE_VERSION: '1.10.1.763'
  NODE_VERSION: '16'

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.git-ref }}

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache directory
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Cache clojure deps
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
          key: ${{ runner.os }}-clojure-lib-${{ hashFiles('**/deps.edn') }}

      - name: Setup clojure
        uses: DeLaGuardo/setup-clojure@3.5
        with:
          cli: ${{ env.CLOJURE_VERSION }}

      - name: Retrieve tag version
        id: ref
        run: |
          pkgver=$(node ./scripts/get-pkg-version.js "${{ inputs.build-target || github.event.inputs.build-target }}")
          echo ::set-output name=version::$pkgver

      - name: Update Nightly APP Version
        run: |
          sed -i 's/defonce version ".*"/defonce version "${{ steps.ref.outputs.version }}-drw"/g' src/main/frontend/version.cljs
          sed -i 's/versionName ".*"/versionName "${{ steps.ref.outputs.version }}-drw"/g' android/app/build.gradle

      - name: Compile CLJS
        run: yarn install && yarn release

      - name: Prepare public Directory
        run: |
          cp -r static public/
          rm -rvf public/static/js/publishing
          rm -rvf public/workspaces
          rm -rvf public/static/js/*.js.map || true
          rm -rvf public/static/*.*
          rm -rvf public/static/ios
          rm -rvf android/app/src/main/assets/public || true

      - name: Sync public to Android Project
        run: npx cap sync

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Build Android
        run: |
          ./gradlew clean
          ./gradlew zipApksForRelease
        working-directory: android

      - name: Sign Android APK
        run: |
          echo ${{ secrets.ANDROID_KEYSTORE }} | base64 -d > keystore.jks
          /usr/local/lib/android/sdk/build-tools/30.0.3/apksigner sign \
            --ks keystore.jks --ks-pass "pass:${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" \
            --in app/build/outputs/apk/release/app-release-unsigned.apk \
            --out app-signed.apk
        working-directory: android

      - name: Rename Apk
        run: |
          mkdir builds
          mv android/app-signed.apk ./builds/logseq-android-${{ steps.ref.outputs.version }}.apk

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: logseq-android-builds
      #     path: builds

      - name: Telegram Notify
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Build Complete Logseq-android-${{ steps.ref.outputs.version }}.apk
          document: builds/logseq-android-${{ steps.ref.outputs.version }}.apk

      # - name: Upload File
      #   id: upload
      #   uses: JantHsueh/upload-file-action@master
      #   with:
      #     url: https://n8n.darwis.id/webhook/8752e9b8-734a-4f7e-927a-052d592504ce
      #     forms: '{"fileName":"logseq-android-${{ steps.ref.outputs.version }}.apk"}'
      #     fileForms: '{"data":"builds/logseq-android-${{ steps.ref.outputs.version }}.apk"}'
